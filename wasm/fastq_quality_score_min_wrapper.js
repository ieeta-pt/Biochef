window.run_fastq_quality_score_min=async function(o,t=[]){console.log("Starting runFastqQualityScoreMin"),console.log("Arguments:",t);try{let a="",i="";const r={locateFile:o=>o.endsWith(".wasm")?("localhost"===window.location.hostname||"127.0.0.1"===window.location.hostname?"/wasm/":"/gto-wasm-app/wasm/")+o:o,thisProgram:"./fastq_quality_score_min",noInitialRun:!0,print:o=>{a+=o+"\n"},printErr:o=>{i+=o+"\n"}};await(n="fastq_quality_score_min",new Promise(((o,t)=>{if(window[n])return o();const a=document.createElement("script"),i="localhost"===window.location.hostname||"127.0.0.1"===window.location.hostname?"/wasm/":"/gto-wasm-app/wasm/";a.src=i+`${n}.js`,a.onload=()=>o(),a.onerror=()=>t(new Error(`Failed to load ${n}.js`)),document.head.appendChild(a)})));const e=window.fastq_quality_score_min;if("function"!=typeof e)throw new Error("Module factory for fastq_quality_score_min not available.");const s=await e(r);o=o.replace(/\r\n/g,"\n"),s.FS.writeFile("input.txt",o);let l=t.slice();return console.log("Executing module.callMain with arguments:",l),s.callMain(l),{stdout:a.trim(),stderr:i.trim()}}catch(o){throw console.error("Error in runFastqQualityScoreMin:",o),o}var n};