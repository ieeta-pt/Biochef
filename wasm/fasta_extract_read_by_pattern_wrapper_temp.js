window.run_fasta_extract_read_by_pattern=async function(t,a=[]){console.log("Starting runFastaExtractReadByPattern"),console.log("Arguments:",a);try{let o="",r="";const e={locateFile:t=>t.endsWith(".wasm")?("localhost"===window.location.hostname||"127.0.0.1"===window.location.hostname?"/wasm/":"/Biochef/wasm/")+t:t,thisProgram:"./fasta_extract_read_by_pattern",noInitialRun:!0,print:t=>{o+=t+"\n"},printErr:t=>{r+=t+"\n"}};await(n="fasta_extract_read_by_pattern",new Promise(((t,a)=>{if(window[n])return t();const o=document.createElement("script"),r="localhost"===window.location.hostname||"127.0.0.1"===window.location.hostname?"/wasm/":"/Biochef/wasm/";o.src=r+`${n}.js`,o.onload=()=>t(),o.onerror=()=>a(new Error(`Failed to load ${n}.js`)),document.head.appendChild(o)})));const i=window.fasta_extract_read_by_pattern;if("function"!=typeof i)throw new Error("Module factory for fasta_extract_read_by_pattern not available.");const c=await i(e);t=t.replace(/\r\n/g,"\n"),c.FS.writeFile("input.txt",t);let s=a.slice();return console.log("Executing module.callMain with arguments:",s),c.callMain(s),{stdout:o.trim(),stderr:r.trim()}}catch(t){throw console.error("Error in runFastaExtractReadByPattern:",t),t}var n};