window.run_fastq_quality_score_max=async function(o,t=[]){console.log("Starting runFastqQualityScoreMax"),console.log("Arguments:",t);try{let n="",r="";const e={locateFile:o=>o.endsWith(".wasm")?("localhost"===window.location.hostname||"127.0.0.1"===window.location.hostname?"/wasm/":"/gto-wasm-app/wasm/")+o:o,thisProgram:"./fastq_quality_score_max",noInitialRun:!0,print:o=>{n+=o+"\n"},printErr:o=>{r+=o+"\n"}};await(a="fastq_quality_score_max",new Promise(((o,t)=>{if(window[a])return o();const n=document.createElement("script"),r="localhost"===window.location.hostname||"127.0.0.1"===window.location.hostname?"/wasm/":"/gto-wasm-app/wasm/";n.src=r+`${a}.js`,n.onload=()=>o(),n.onerror=()=>t(new Error(`Failed to load ${a}.js`)),document.head.appendChild(n)})));const i=window.fastq_quality_score_max;if("function"!=typeof i)throw new Error("Module factory for fastq_quality_score_max not available.");const s=await i(e);o=o.replace(/\r\n/g,"\n"),s.FS.writeFile("input.txt",o);let l=t.slice();return console.log("Executing module.callMain with arguments:",l),s.callMain(l),{stdout:n.trim(),stderr:r.trim()}}catch(o){throw console.error("Error in runFastqQualityScoreMax:",o),o}var a};