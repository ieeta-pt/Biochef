window.run_fastq_complement=async function(o,t=[]){console.log("Starting runFastqComplement"),console.log("Arguments:",t);try{let e="",a="";const r={locateFile:o=>o.endsWith(".wasm")?("localhost"===window.location.hostname||"127.0.0.1"===window.location.hostname?"/wasm/":"/gto-wasm-app/wasm/")+o:o,thisProgram:"./fastq_complement",noInitialRun:!0,print:o=>{e+=o+"\n"},printErr:o=>{a+=o+"\n"}};await(n="fastq_complement",new Promise(((o,t)=>{if(window[n])return o();const e=document.createElement("script"),a="localhost"===window.location.hostname||"127.0.0.1"===window.location.hostname?"/wasm/":"/gto-wasm-app/wasm/";e.src=a+`${n}.js`,e.onload=()=>o(),e.onerror=()=>t(new Error(`Failed to load ${n}.js`)),document.head.appendChild(e)})));const l=window.fastq_complement;if("function"!=typeof l)throw new Error("Module factory for fastq_complement not available.");const i=await l(r);o=o.replace(/\r\n/g,"\n"),i.FS.writeFile("input.txt",o);let s=t.slice();return console.log("Executing module.callMain with arguments:",s),i.callMain(s),{stdout:e.trim(),stderr:a.trim()}}catch(o){throw console.error("Error in runFastqComplement:",o),o}var n};