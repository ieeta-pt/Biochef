window.run_fastq_pack=async function(o,t=[]){console.log("Starting runFastqPack"),console.log("Arguments:",t);try{let a="",r="";const e={locateFile:o=>o.endsWith(".wasm")?("localhost"===window.location.hostname||"127.0.0.1"===window.location.hostname?"/wasm/":"/gto-wasm-app/wasm/")+o:o,thisProgram:"./fastq_pack",noInitialRun:!0,print:o=>{a+=o+"\n"},printErr:o=>{r+=o+"\n"}};await(n="fastq_pack",new Promise(((o,t)=>{if(window[n])return o();const a=document.createElement("script"),r="localhost"===window.location.hostname||"127.0.0.1"===window.location.hostname?"/wasm/":"/gto-wasm-app/wasm/";a.src=r+`${n}.js`,a.onload=()=>o(),a.onerror=()=>t(new Error(`Failed to load ${n}.js`)),document.head.appendChild(a)})));const i=window.fastq_pack;if("function"!=typeof i)throw new Error("Module factory for fastq_pack not available.");const s=await i(e);o=o.replace(/\r\n/g,"\n"),s.FS.writeFile("input.txt",o);let c=t.slice();return console.log("Executing module.callMain with arguments:",c),s.callMain(c),{stdout:a.trim(),stderr:r.trim()}}catch(o){throw console.error("Error in runFastqPack:",o),o}var n};