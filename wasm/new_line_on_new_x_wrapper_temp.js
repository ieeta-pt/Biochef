window.run_new_line_on_new_x=async function(n,e=[]){console.log("Starting runNewLineOnNewX"),console.log("Arguments:",e);try{let r="",t="";const i={locateFile:n=>n.endsWith(".wasm")?`/wasm/${n}`:n,thisProgram:"./new_line_on_new_x",noInitialRun:!0,print:n=>{r+=n+"\n"},printErr:n=>{t+=n+"\n"}};await(o="new_line_on_new_x",new Promise(((n,e)=>{if(window[o])return n();const r=document.createElement("script");r.src=`/wasm/${o}.js`,r.onload=()=>n(),r.onerror=()=>e(new Error(`Failed to load ${o}.js`)),document.head.appendChild(r)})));const l=window.new_line_on_new_x;if("function"!=typeof l)throw new Error("Module factory for new_line_on_new_x not available.");const w=await l(i);n=n.replace(/\r\n/g,"\n"),w.FS.writeFile("input.txt",n);let a=e.slice();return console.log("Executing module.callMain with arguments:",a),w.callMain(a),{stdout:r.trim(),stderr:t.trim()}}catch(n){throw console.error("Error in runNewLineOnNewX:",n),n}var o};