window.run_fastq_extract_quality_scores=async function(t,r=[]){console.log("Starting runFastqExtractQualityScores"),console.log("Arguments:",r);try{let a="",e="";const n={locateFile:t=>t.endsWith(".wasm")?`/wasm/${t}`:t,thisProgram:"./fastq_extract_quality_scores",noInitialRun:!0,print:t=>{a+=t+"\n"},printErr:t=>{e+=t+"\n"}};await(o="fastq_extract_quality_scores",new Promise(((t,r)=>{if(window[o])return t();const a=document.createElement("script");a.src=`/wasm/${o}.js`,a.onload=()=>t(),a.onerror=()=>r(new Error(`Failed to load ${o}.js`)),document.head.appendChild(a)})));const s=window.fastq_extract_quality_scores;if("function"!=typeof s)throw new Error("Module factory for fastq_extract_quality_scores not available.");const i=await s(n);t=t.replace(/\r\n/g,"\n"),i.FS.writeFile("input.txt",t);let c=r.slice();return console.log("Executing module.callMain with arguments:",c),i.callMain(c),{stdout:a.trim(),stderr:e.trim()}}catch(t){throw console.error("Error in runFastqExtractQualityScores:",t),t}var o};