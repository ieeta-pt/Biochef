window.run_genomic_count_bases=async function(n,o=[]){console.log("Starting runGenomicCountBases"),console.log("Arguments:",o);try{let t="",r="";const i={locateFile:n=>n.endsWith(".wasm")?`/wasm/${n}`:n,thisProgram:"./genomic_count_bases",noInitialRun:!0,print:n=>{t+=n+"\n"},printErr:n=>{r+=n+"\n"}};await(e="genomic_count_bases",new Promise(((n,o)=>{if(window[e])return n();const t=document.createElement("script");t.src=`/wasm/${e}.js`,t.onload=()=>n(),t.onerror=()=>o(new Error(`Failed to load ${e}.js`)),document.head.appendChild(t)})));const s=window.genomic_count_bases;if("function"!=typeof s)throw new Error("Module factory for genomic_count_bases not available.");const a=await s(i);n=n.replace(/\r\n/g,"\n"),a.FS.writeFile("input.txt",n);let c=o.slice();return console.log("Executing module.callMain with arguments:",c),a.callMain(c),{stdout:t.trim(),stderr:r.trim()}}catch(n){throw console.error("Error in runGenomicCountBases:",n),n}var e};