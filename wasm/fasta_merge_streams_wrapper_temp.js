window.run_fasta_merge_streams=async function(r,t=[]){console.log("Starting runFastaMergeStreams"),console.log("Arguments:",t);try{let a="",n="";const o={locateFile:r=>r.endsWith(".wasm")?`/wasm/${r}`:r,thisProgram:"./fasta_merge_streams",noInitialRun:!0,print:r=>{a+=r+"\n"},printErr:r=>{n+=r+"\n"},stdin:null};await(e="fasta_merge_streams",new Promise(((r,t)=>{if(window[e])return r();const a=document.createElement("script");a.src=`/wasm/${e}.js`,a.onload=()=>r(),a.onerror=()=>t(new Error(`Failed to load ${e}.js`)),document.head.appendChild(a)})));const s=window.fasta_merge_streams;if("function"!=typeof s)throw new Error("Module factory for fasta_merge_streams not available.");const i=await s(o);for(const[t,e]of Object.entries(r))i.FS.writeFile(e.name,e.data);let l=t;return console.log("Executing module.callMain with arguments:",l),i.callMain(l),{stdout:a.trim(),stderr:n.trim()}}catch(r){throw console.error("Error in runFastaMergeStreams:",r),r}var e};