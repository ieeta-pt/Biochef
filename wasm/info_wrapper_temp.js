window.run_info=async function(n,o=[]){console.log("Starting runInfo"),console.log("Arguments:",o);try{let t="",e="";const i={locateFile:n=>n.endsWith(".wasm")?`/wasm/${n}`:n,thisProgram:"./info",noInitialRun:!0,print:n=>{t+=n+"\n"},printErr:n=>{e+=n+"\n"}};await(r="info",new Promise(((n,o)=>{if(window[r])return n();const t=document.createElement("script");t.src=`/wasm/${r}.js`,t.onload=()=>n(),t.onerror=()=>o(new Error(`Failed to load ${r}.js`)),document.head.appendChild(t)})));const a=window.info;if("function"!=typeof a)throw new Error("Module factory for info not available.");const l=await a(i);n=n.replace(/\r\n/g,"\n"),l.FS.writeFile("input.txt",n);let c=o.slice();return console.log("Executing module.callMain with arguments:",c),l.callMain(c),{stdout:t.trim(),stderr:e.trim()}}catch(n){throw console.error("Error in runInfo:",n),n}var r};