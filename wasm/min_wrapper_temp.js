window.run_min=async function(n,o=[]){console.log("Starting runMin"),console.log("Arguments:",o);try{let i="",r="";const e={locateFile:n=>n.endsWith(".wasm")?("localhost"===window.location.hostname||"127.0.0.1"===window.location.hostname?"/wasm/":"/Biochef/wasm/")+n:n,thisProgram:"./min",noInitialRun:!0,print:n=>{i+=n+"\n"},printErr:n=>{r+=n+"\n"},stdin:null};await(t="min",new Promise(((n,o)=>{if(window[t])return n();const i=document.createElement("script"),r="localhost"===window.location.hostname||"127.0.0.1"===window.location.hostname?"/wasm/":"/Biochef/wasm/";i.src=r+`${t}.js`,i.onload=()=>n(),i.onerror=()=>o(new Error(`Failed to load ${t}.js`)),document.head.appendChild(i)})));const a=window.min;if("function"!=typeof a)throw new Error("Module factory for min not available.");const l=await a(e);for(const[o,t]of Object.entries(n))l.FS.writeFile(t.name,t.data);let s=o;return console.log("Executing module.callMain with arguments:",s),l.callMain(s),{stdout:i.trim(),stderr:r.trim()}}catch(n){throw console.error("Error in runMin:",n),n}var t};