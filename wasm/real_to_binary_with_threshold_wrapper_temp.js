window.run_real_to_binary_with_threshold=async function(r,t=[]){console.log("Starting runRealToBinaryWithThreshold"),console.log("Arguments:",t);try{let n="",e="";const i={locateFile:r=>r.endsWith(".wasm")?`/wasm/${r}`:r,thisProgram:"./real_to_binary_with_threshold",noInitialRun:!0,print:r=>{n+=r+"\n"},printErr:r=>{e+=r+"\n"}};await(o="real_to_binary_with_threshold",new Promise(((r,t)=>{if(window[o])return r();const n=document.createElement("script");n.src=`/wasm/${o}.js`,n.onload=()=>r(),n.onerror=()=>t(new Error(`Failed to load ${o}.js`)),document.head.appendChild(n)})));const a=window.real_to_binary_with_threshold;if("function"!=typeof a)throw new Error("Module factory for real_to_binary_with_threshold not available.");const l=await a(i);r=r.replace(/\r\n/g,"\n"),l.FS.writeFile("input.txt",r);let s=t.slice();return console.log("Executing module.callMain with arguments:",s),l.callMain(s),{stdout:n.trim(),stderr:e.trim()}}catch(r){throw console.error("Error in runRealToBinaryWithThreshold:",r),r}var o};