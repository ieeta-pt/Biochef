window.run_fastq_minimum_read_size=async function(n,i=[]){console.log("Starting runFastqMinimumReadSize"),console.log("Arguments:",i);try{let r="",t="";const o={locateFile:n=>n.endsWith(".wasm")?`/wasm/${n}`:n,thisProgram:"./fastq_minimum_read_size",noInitialRun:!0,print:n=>{r+=n+"\n"},printErr:n=>{t+=n+"\n"}};await(e="fastq_minimum_read_size",new Promise(((n,i)=>{if(window[e])return n();const r=document.createElement("script");r.src=`/wasm/${e}.js`,r.onload=()=>n(),r.onerror=()=>i(new Error(`Failed to load ${e}.js`)),document.head.appendChild(r)})));const a=window.fastq_minimum_read_size;if("function"!=typeof a)throw new Error("Module factory for fastq_minimum_read_size not available.");const s=await a(o);n=n.replace(/\r\n/g,"\n"),s.FS.writeFile("input.txt",n);let m=i.slice();return console.log("Executing module.callMain with arguments:",m),s.callMain(m),{stdout:r.trim(),stderr:t.trim()}}catch(n){throw console.error("Error in runFastqMinimumReadSize:",n),n}var e};