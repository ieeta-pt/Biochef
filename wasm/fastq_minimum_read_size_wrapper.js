window.run_fastq_minimum_read_size=async function(n,o=[]){console.log("Starting runFastqMinimumReadSize"),console.log("Arguments:",o);try{let i="",a="";const e={locateFile:n=>n.endsWith(".wasm")?("localhost"===window.location.hostname||"127.0.0.1"===window.location.hostname?"/wasm/":"/gto-wasm-app/wasm/")+n:n,thisProgram:"./fastq_minimum_read_size",noInitialRun:!0,print:n=>{i+=n+"\n"},printErr:n=>{a+=n+"\n"}};await(t="fastq_minimum_read_size",new Promise(((n,o)=>{if(window[t])return n();const i=document.createElement("script"),a="localhost"===window.location.hostname||"127.0.0.1"===window.location.hostname?"/wasm/":"/gto-wasm-app/wasm/";i.src=a+`${t}.js`,i.onload=()=>n(),i.onerror=()=>o(new Error(`Failed to load ${t}.js`)),document.head.appendChild(i)})));const r=window.fastq_minimum_read_size;if("function"!=typeof r)throw new Error("Module factory for fastq_minimum_read_size not available.");const s=await r(e);n=n.replace(/\r\n/g,"\n"),s.FS.writeFile("input.txt",n);let m=o.slice();return console.log("Executing module.callMain with arguments:",m),s.callMain(m),{stdout:i.trim(),stderr:a.trim()}}catch(n){throw console.error("Error in runFastqMinimumReadSize:",n),n}var t};