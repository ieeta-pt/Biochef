window.run_fastq_maximum_read_size=async function(e,r=[]){console.log("Starting runFastqMaximumReadSize"),console.log("Arguments:",r);try{let a="",n="";const i={locateFile:e=>e.endsWith(".wasm")?`/wasm/${e}`:e,thisProgram:"./fastq_maximum_read_size",noInitialRun:!0,print:e=>{a+=e+"\n"},printErr:e=>{n+=e+"\n"}};await(t="fastq_maximum_read_size",new Promise(((e,r)=>{if(window[t])return e();const a=document.createElement("script");a.src=`/wasm/${t}.js`,a.onload=()=>e(),a.onerror=()=>r(new Error(`Failed to load ${t}.js`)),document.head.appendChild(a)})));const o=window.fastq_maximum_read_size;if("function"!=typeof o)throw new Error("Module factory for fastq_maximum_read_size not available.");const s=await o(i);e=e.replace(/\r\n/g,"\n"),s.FS.writeFile("input.txt",e);let m=r.slice();return console.log("Executing module.callMain with arguments:",m),s.callMain(m),{stdout:a.trim(),stderr:n.trim()}}catch(e){throw console.error("Error in runFastqMaximumReadSize:",e),e}var t};