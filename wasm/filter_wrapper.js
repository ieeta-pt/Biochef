window.run_filter=async function(r,t=[]){console.log("Starting runFilter"),console.log("Arguments:",t);try{let e="",o="";const i={locateFile:r=>r.endsWith(".wasm")?`/wasm/${r}`:r,thisProgram:"./filter",noInitialRun:!0,print:r=>{e+=r+"\n"},printErr:r=>{o+=r+"\n"}};await(n="filter",new Promise(((r,t)=>{if(window[n])return r();const e=document.createElement("script");e.src=`/wasm/${n}.js`,e.onload=()=>r(),e.onerror=()=>t(new Error(`Failed to load ${n}.js`)),document.head.appendChild(e)})));const l=window.filter;if("function"!=typeof l)throw new Error("Module factory for filter not available.");const a=await l(i);r=r.replace(/\r\n/g,"\n"),a.FS.writeFile("input.txt",r);let c=t.slice();return console.log("Executing module.callMain with arguments:",c),a.callMain(c),{stdout:e.trim(),stderr:o.trim()}}catch(r){throw console.error("Error in runFilter:",r),r}var n};