window.run_genomic_extract=async function(o,t=[]){console.log("Starting runGenomicExtract"),console.log("Arguments:",t);try{let e="",r="";const i={locateFile:o=>o.endsWith(".wasm")?("localhost"===window.location.hostname||"127.0.0.1"===window.location.hostname?"/wasm/":"/Biochef/wasm/")+o:o,thisProgram:"./genomic_extract",noInitialRun:!0,print:o=>{e+=o+"\n"},printErr:o=>{r+=o+"\n"}};await(n="genomic_extract",new Promise(((o,t)=>{if(window[n])return o();const e=document.createElement("script"),r="localhost"===window.location.hostname||"127.0.0.1"===window.location.hostname?"/wasm/":"/Biochef/wasm/";e.src=r+`${n}.js`,e.onload=()=>o(),e.onerror=()=>t(new Error(`Failed to load ${n}.js`)),document.head.appendChild(e)})));const a=window.genomic_extract;if("function"!=typeof a)throw new Error("Module factory for genomic_extract not available.");const c=await a(i);o=o.replace(/\r\n/g,"\n"),c.FS.writeFile("input.txt",o);let l=t.slice();return console.log("Executing module.callMain with arguments:",l),c.callMain(l),{stdout:e.trim(),stderr:r.trim()}}catch(o){throw console.error("Error in runGenomicExtract:",o),o}var n};