window.run_fasta_extract_read_by_pattern=async function(t,r=[]){console.log("Starting runFastaExtractReadByPattern"),console.log("Arguments:",r);try{let e="",n="";const o={locateFile:t=>t.endsWith(".wasm")?`/wasm/${t}`:t,thisProgram:"./fasta_extract_read_by_pattern",noInitialRun:!0,print:t=>{e+=t+"\n"},printErr:t=>{n+=t+"\n"}};await(a="fasta_extract_read_by_pattern",new Promise(((t,r)=>{if(window[a])return t();const e=document.createElement("script");e.src=`/wasm/${a}.js`,e.onload=()=>t(),e.onerror=()=>r(new Error(`Failed to load ${a}.js`)),document.head.appendChild(e)})));const i=window.fasta_extract_read_by_pattern;if("function"!=typeof i)throw new Error("Module factory for fasta_extract_read_by_pattern not available.");const c=await i(o);t=t.replace(/\r\n/g,"\n"),c.FS.writeFile("input.txt",t);let s=r.slice();return console.log("Executing module.callMain with arguments:",s),c.callMain(s),{stdout:e.trim(),stderr:n.trim()}}catch(t){throw console.error("Error in runFastaExtractReadByPattern:",t),t}var a};