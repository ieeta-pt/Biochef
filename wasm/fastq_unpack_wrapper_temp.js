window.run_fastq_unpack=async function(n,o=[]){console.log("Starting runFastqUnpack"),console.log("Arguments:",o);try{let a="",r="";const e={locateFile:n=>n.endsWith(".wasm")?("localhost"===window.location.hostname||"127.0.0.1"===window.location.hostname?"/wasm/":"/Biochef/wasm/")+n:n,thisProgram:"./fastq_unpack",noInitialRun:!0,print:n=>{a+=n+"\n"},printErr:n=>{r+=n+"\n"}};await(t="fastq_unpack",new Promise(((n,o)=>{if(window[t])return n();const a=document.createElement("script"),r="localhost"===window.location.hostname||"127.0.0.1"===window.location.hostname?"/wasm/":"/Biochef/wasm/";a.src=r+`${t}.js`,a.onload=()=>n(),a.onerror=()=>o(new Error(`Failed to load ${t}.js`)),document.head.appendChild(a)})));const i=window.fastq_unpack;if("function"!=typeof i)throw new Error("Module factory for fastq_unpack not available.");const c=await i(e);n=n.replace(/\r\n/g,"\n"),c.FS.writeFile("input.txt",n);let s=o.slice();return console.log("Executing module.callMain with arguments:",s),c.callMain(s),{stdout:a.trim(),stderr:r.trim()}}catch(n){throw console.error("Error in runFastqUnpack:",n),n}var t};