window.run_genomic_complement=async function(o,n=[]){console.log("Starting runGenomicComplement"),console.log("Arguments:",n);try{let t="",i="";const r={locateFile:o=>o.endsWith(".wasm")?("localhost"===window.location.hostname||"127.0.0.1"===window.location.hostname?"/wasm/":"/Biochef/wasm/")+o:o,thisProgram:"./genomic_complement",noInitialRun:!0,print:o=>{t+=o+"\n"},printErr:o=>{i+=o+"\n"}};await(e="genomic_complement",new Promise(((o,n)=>{if(window[e])return o();const t=document.createElement("script"),i="localhost"===window.location.hostname||"127.0.0.1"===window.location.hostname?"/wasm/":"/Biochef/wasm/";t.src=i+`${e}.js`,t.onload=()=>o(),t.onerror=()=>n(new Error(`Failed to load ${e}.js`)),document.head.appendChild(t)})));const c=window.genomic_complement;if("function"!=typeof c)throw new Error("Module factory for genomic_complement not available.");const l=await c(r);o=o.replace(/\r\n/g,"\n"),l.FS.writeFile("input.txt",o);let a=n.slice();return console.log("Executing module.callMain with arguments:",a),l.callMain(a),{stdout:t.trim(),stderr:i.trim()}}catch(o){throw console.error("Error in runGenomicComplement:",o),o}var e};