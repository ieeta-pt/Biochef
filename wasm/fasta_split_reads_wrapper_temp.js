window.run_fasta_split_reads=async function(t,o=[]){console.log("Starting runFastaSplitReads"),console.log("Arguments:",o);try{let n="",a="";const e={locateFile:t=>t.endsWith(".wasm")?("localhost"===window.location.hostname||"127.0.0.1"===window.location.hostname?"/wasm/":"/Biochef/wasm/")+t:t,thisProgram:"./fasta_split_reads",noInitialRun:!0,print:t=>{n+=t+"\n"},printErr:t=>{a+=t+"\n"}};await(r="fasta_split_reads",new Promise(((t,o)=>{if(window[r])return t();const n=document.createElement("script"),a="localhost"===window.location.hostname||"127.0.0.1"===window.location.hostname?"/wasm/":"/Biochef/wasm/";n.src=a+`${r}.js`,n.onload=()=>t(),n.onerror=()=>o(new Error(`Failed to load ${r}.js`)),document.head.appendChild(n)})));const s=window.fasta_split_reads;if("function"!=typeof s)throw new Error("Module factory for fasta_split_reads not available.");const i=await s(e);t=t.replace(/\r\n/g,"\n"),i.FS.writeFile("input.txt",t);let l=o.slice();try{i.FS.mkdir("/outputs")}catch(t){console.log("Output directory already exists.")}l.includes("-l")||l.push("-l","/outputs"),console.log("Executing module.callMain with arguments:",l),i.callMain(l);let c={};try{const t=i.FS.readdir("/outputs").filter((t=>"."!==t&&".."!==t));for(const o of t){const t=i.FS.readFile(`/outputs/${o}`,{encoding:"binary"});c[o]=new TextDecoder("utf-8",{fatal:!1}).decode(t)}for(const o of t)i.FS.unlink(`/outputs/${o}`);i.FS.rmdir("/outputs")}catch(t){console.error("Error reading output files:",t)}return{stdout:n.trim(),stderr:a.trim(),outputs:c}}catch(t){throw console.error("Error in runFastaSplitReads:",t),t}var r};