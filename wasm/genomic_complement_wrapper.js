window.run_genomic_complement=async function(o,n=[]){console.log("Starting runGenomicComplement"),console.log("Arguments:",n);try{let e="",i="";const r={locateFile:o=>o.endsWith(".wasm")?("localhost"===window.location.hostname||"127.0.0.1"===window.location.hostname?"/wasm/":"/gto-wasm-app/wasm/")+o:o,thisProgram:"./genomic_complement",noInitialRun:!0,print:o=>{e+=o+"\n"},printErr:o=>{i+=o+"\n"}};await(t="genomic_complement",new Promise(((o,n)=>{if(window[t])return o();const e=document.createElement("script"),i="localhost"===window.location.hostname||"127.0.0.1"===window.location.hostname?"/wasm/":"/gto-wasm-app/wasm/";e.src=i+`${t}.js`,e.onload=()=>o(),e.onerror=()=>n(new Error(`Failed to load ${t}.js`)),document.head.appendChild(e)})));const a=window.genomic_complement;if("function"!=typeof a)throw new Error("Module factory for genomic_complement not available.");const c=await a(r);o=o.replace(/\r\n/g,"\n"),c.FS.writeFile("input.txt",o);let l=n.slice();return console.log("Executing module.callMain with arguments:",l),c.callMain(l),{stdout:e.trim(),stderr:i.trim()}}catch(o){throw console.error("Error in runGenomicComplement:",o),o}var t};