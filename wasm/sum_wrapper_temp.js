window.run_sum=async function(n,r=[]){console.log("Starting runSum"),console.log("Arguments:",r);try{let o="",e="";const i={locateFile:n=>n.endsWith(".wasm")?`/wasm/${n}`:n,thisProgram:"./sum",noInitialRun:!0,print:n=>{o+=n+"\n"},printErr:n=>{e+=n+"\n"}};await(t="sum",new Promise(((n,r)=>{if(window[t])return n();const o=document.createElement("script");o.src=`/wasm/${t}.js`,o.onload=()=>n(),o.onerror=()=>r(new Error(`Failed to load ${t}.js`)),document.head.appendChild(o)})));const a=window.sum;if("function"!=typeof a)throw new Error("Module factory for sum not available.");const s=await a(i);n=n.replace(/\r\n/g,"\n"),s.FS.writeFile("input.txt",n);let l=r.slice();return console.log("Executing module.callMain with arguments:",l),s.callMain(l),{stdout:o.trim(),stderr:e.trim()}}catch(n){throw console.error("Error in runSum:",n),n}var t};