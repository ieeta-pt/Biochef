window.run_brute_force_string=async function(o,t=[]){console.log("Starting runBruteForceString"),console.log("Arguments:",t);try{let n="",e="";const i={locateFile:o=>o.endsWith(".wasm")?("localhost"===window.location.hostname||"127.0.0.1"===window.location.hostname?"/wasm/":"/Biochef/wasm/")+o:o,thisProgram:"./brute_force_string",noInitialRun:!0,print:o=>{n+=o+"\n"},printErr:o=>{e+=o+"\n"}};await(r="brute_force_string",new Promise(((o,t)=>{if(window[r])return o();const n=document.createElement("script"),e="localhost"===window.location.hostname||"127.0.0.1"===window.location.hostname?"/wasm/":"/Biochef/wasm/";n.src=e+`${r}.js`,n.onload=()=>o(),n.onerror=()=>t(new Error(`Failed to load ${r}.js`)),document.head.appendChild(n)})));const a=window.brute_force_string;if("function"!=typeof a)throw new Error("Module factory for brute_force_string not available.");const c=await a(i);o=o.replace(/\r\n/g,"\n"),c.FS.writeFile("input.txt",o);let s=t.slice();return console.log("Executing module.callMain with arguments:",s),c.callMain(s),{stdout:n.trim(),stderr:e.trim()}}catch(o){throw console.error("Error in runBruteForceString:",o),o}var r};