window.run_brute_force_string=async function(r,t=[]){console.log("Starting runBruteForceString with input:",r),console.log("Arguments:",t);try{r=r.replace(/\r\n/g,"\n");let o="",e="";const i={locateFile:r=>r.endsWith(".wasm")?`/wasm/${r}`:r,thisProgram:"./brute_force_string",noInitialRun:!0,print:function(r){o+=r+"\n"},printErr:function(r){e+=r+"\n"}};await(n="brute_force_string",new Promise(((r,t)=>{if(window[n])return void r();const o=document.createElement("script");o.src=`/wasm/${n}.js`,o.onload=()=>{console.log(`Module script ${n}.js loaded.`),r()},o.onerror=()=>{t(new Error(`Failed to load module script ${n}.js.`))},document.head.appendChild(o)})));const c=window.brute_force_string;if("function"!=typeof c)throw new Error("Module factory function for brute_force_string is not available.");const s=await c(i);s.FS.writeFile("input.txt",r);const a=t;return console.log("Executing module.callMain with arguments:",a),s.callMain(a),{stdout:o.trim(),stderr:e.trim()}}catch(r){throw console.error("Error in runBruteForceString:",r),r}var n};