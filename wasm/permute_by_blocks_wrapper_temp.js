window.run_permute_by_blocks=async function(o,t=[]){console.log("Starting runPermuteByBlocks"),console.log("Arguments:",t);try{let e="",r="";const i={locateFile:o=>o.endsWith(".wasm")?("localhost"===window.location.hostname||"127.0.0.1"===window.location.hostname?"/wasm/":"/Biochef/wasm/")+o:o,thisProgram:"./permute_by_blocks",noInitialRun:!0,print:o=>{e+=o+"\n"},printErr:o=>{r+=o+"\n"}};await(n="permute_by_blocks",new Promise(((o,t)=>{if(window[n])return o();const e=document.createElement("script"),r="localhost"===window.location.hostname||"127.0.0.1"===window.location.hostname?"/wasm/":"/Biochef/wasm/";e.src=r+`${n}.js`,e.onload=()=>o(),e.onerror=()=>t(new Error(`Failed to load ${n}.js`)),document.head.appendChild(e)})));const l=window.permute_by_blocks;if("function"!=typeof l)throw new Error("Module factory for permute_by_blocks not available.");const a=await l(i);o=o.replace(/\r\n/g,"\n"),a.FS.writeFile("input.txt",o);let c=t.slice();return console.log("Executing module.callMain with arguments:",c),a.callMain(c),{stdout:e.trim(),stderr:r.trim()}}catch(o){throw console.error("Error in runPermuteByBlocks:",o),o}var n};