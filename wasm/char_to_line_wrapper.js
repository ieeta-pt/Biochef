window.run_char_to_line=async function(n,r=[]){console.log("Starting runCharToLine"),console.log("Arguments:",r);try{let t="",e="";const i={locateFile:n=>n.endsWith(".wasm")?`/wasm/${n}`:n,thisProgram:"./char_to_line",noInitialRun:!0,print:n=>{t+=n+"\n"},printErr:n=>{e+=n+"\n"}};await(o="char_to_line",new Promise(((n,r)=>{if(window[o])return n();const t=document.createElement("script");t.src=`/wasm/${o}.js`,t.onload=()=>n(),t.onerror=()=>r(new Error(`Failed to load ${o}.js`)),document.head.appendChild(t)})));const a=window.char_to_line;if("function"!=typeof a)throw new Error("Module factory for char_to_line not available.");const l=await a(i);n=n.replace(/\r\n/g,"\n"),l.FS.writeFile("input.txt",n);let c=r.slice();return console.log("Executing module.callMain with arguments:",c),l.callMain(c),{stdout:t.trim(),stderr:e.trim()}}catch(n){throw console.error("Error in runCharToLine:",n),n}var o};