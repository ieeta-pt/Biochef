window.run_fastq_unpack=async function(n,t=[]){console.log("Starting runFastqUnpack"),console.log("Arguments:",t);try{let o="",a="";const e={locateFile:n=>n.endsWith(".wasm")?`/wasm/${n}`:n,thisProgram:"./fastq_unpack",noInitialRun:!0,print:n=>{o+=n+"\n"},printErr:n=>{a+=n+"\n"}};await(r="fastq_unpack",new Promise(((n,t)=>{if(window[r])return n();const o=document.createElement("script");o.src=`/wasm/${r}.js`,o.onload=()=>n(),o.onerror=()=>t(new Error(`Failed to load ${r}.js`)),document.head.appendChild(o)})));const i=window.fastq_unpack;if("function"!=typeof i)throw new Error("Module factory for fastq_unpack not available.");const c=await i(e);n=n.replace(/\r\n/g,"\n"),c.FS.writeFile("input.txt",n);let s=t.slice();return console.log("Executing module.callMain with arguments:",s),c.callMain(s),{stdout:o.trim(),stderr:a.trim()}}catch(n){throw console.error("Error in runFastqUnpack:",n),n}var r};