window.run_genomic_gen_random_dna=async function(n,o=[]){console.log("Starting runGenomicGenRandomDna"),console.log("Arguments:",o);try{let t="",e="";const r={locateFile:n=>n.endsWith(".wasm")?("localhost"===window.location.hostname||"127.0.0.1"===window.location.hostname?"/wasm/":"/gto-wasm-app/wasm/")+n:n,thisProgram:"./genomic_gen_random_dna",noInitialRun:!0,print:n=>{t+=n+"\n"},printErr:n=>{e+=n+"\n"}};await(a="genomic_gen_random_dna",new Promise(((n,o)=>{if(window[a])return n();const t=document.createElement("script"),e="localhost"===window.location.hostname||"127.0.0.1"===window.location.hostname?"/wasm/":"/gto-wasm-app/wasm/";t.src=e+`${a}.js`,t.onload=()=>n(),t.onerror=()=>o(new Error(`Failed to load ${a}.js`)),document.head.appendChild(t)})));const i=window.genomic_gen_random_dna;if("function"!=typeof i)throw new Error("Module factory for genomic_gen_random_dna not available.");const c=await i(r);n=n.replace(/\r\n/g,"\n"),c.FS.writeFile("input.txt",n);let l=o.slice();return console.log("Executing module.callMain with arguments:",l),c.callMain(l),{stdout:t.trim(),stderr:e.trim()}}catch(n){throw console.error("Error in runGenomicGenRandomDna:",n),n}var a};