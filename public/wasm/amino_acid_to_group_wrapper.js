/**
 * Wrapper function for the amino_acid_to_group WASM module.
 * Automatically generated by generate_wrapper.py
 */

(function() {
  /**
   * Runs the AminoAcidToGroup tool.
   * Uses a single stdin data string.   * @param {string} inputData - The input data.   * @param {Array<string>} args - CLI arguments (include flags and filenames for file inputs).
   * @returns {Promise<Object>} An object containing stdout and stderr outputs.
   */
  async function runAminoAcidToGroup(inputData, args = []) {
    console.log("Starting runAminoAcidToGroup");
    console.log("Arguments:", args);

    try {
      // Buffers for capturing stdout and stderr
      let stdoutBuffer = '';
      let stderrBuffer = '';

      // Module instantiation options
      const options = {
        locateFile: (path) => {
          if (path.endsWith('.wasm')) {
            const basePath = window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1' 
              ? '/wasm/' 
              : '/gto-wasm-app/wasm/';
            return basePath + path;
          }
          return path;
        },
        thisProgram: './amino_acid_to_group',
        noInitialRun: true,
        print: (text) => { stdoutBuffer += text + '\n'; },
        printErr: (text) => { stderrBuffer += text + '\n'; },
      };

      // Load the WASM module script
      await loadModuleScript('amino_acid_to_group');
      const moduleFactory = window['amino_acid_to_group'];
      if (typeof moduleFactory !== 'function') {
        throw new Error(`Module factory for amino_acid_to_group not available.`);
      }
      const module = await moduleFactory(options);

      // ------------------------------------------------------------------
      // Write inputs into the virtual filesystem
      // ------------------------------------------------------------------
      // Normalize and write single stdin input
      inputData = inputData.replace(/\r\n/g, '\n');
      module.FS.writeFile('input.txt', inputData);
      let fullArgs = args.slice();
      


      console.log("Executing module.callMain with arguments:", fullArgs);
      module.callMain(fullArgs);

      // ------------------------------------------------------------------
      // Collect outputs
      // ------------------------------------------------------------------
      // Single-output: capture stdout
      const outData = stdoutBuffer.trim();
      return { stdout: outData, stderr: stderrBuffer.trim() };

    } catch (err) {
      console.error(`Error in runAminoAcidToGroup:`, err);
      throw err;
    }
  }

  /**
   * Dynamically loads the WASM module script if not already loaded.
   */
  function loadModuleScript(moduleName) {
    return new Promise((resolve, reject) => {
      if (window[moduleName]) return resolve();
      const script = document.createElement('script');
      const basePath = window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1' 
        ? '/wasm/' 
        : '/gto-wasm-app/wasm/';
      script.src = basePath + `${moduleName}.js`;
      script.onload = () => resolve();
      script.onerror = () => reject(new Error(`Failed to load ${moduleName}.js`));
      document.head.appendChild(script);
    });
  }

  // Expose globally
  window.run_amino_acid_to_group = runAminoAcidToGroup;
})();